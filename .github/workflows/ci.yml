name: CI/CD-Artisan-village

on:
  push:
    branches: 
      - "main"

jobs:
  docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copier le fichier .env.docker
        run: |
          echo "DB_CONNECTION=mysql" >> ./docker/.env
          echo "DB_HOST=mysql" >> ./docker/.env
          echo "DB_PORT=3306" >> ./docker/.env
          echo "DB_DATABASE=testing" >> ./docker/.env
          echo "DB_USERNAME=root" >> ./docker/.env
          echo "DB_PASSWORD=root" >> ./docker/.env

      - name: Installer Docker
        uses: hoverkraft-tech/compose-action@v2.0.1

      - name: Dormir pendant 30 secondes
        run: sleep 30s
        shell: bash

      - name: Initialiser les conteneurs
        run: |
          for i in {1..5}; do docker-compose up -d && break || sleep 15; done

      - name: Copier la configuration Nginx
        run: docker cp ./docker/apiartisanvillage.conf apiArtisanVillage:/etc/nginx/sites-available/apiartisanvillage.conf

      - name: Installer les dépendances Composer
        run: docker exec apiArtisanVillage bash -c "composer install"

      - name: Migrer la base de données
        run: docker exec apiArtisanVillage bash -c "php artisan migrate --force"

      - name: Peupler la base de données
        run: docker exec apiArtisanVillage bash -c "php artisan db:seed --force"

      - name: Migrer la base de données de test
        run: docker exec apiArtisanVillage bash -c "php artisan migrate --env=testing --force"

      - name: Exécuter les tests PHPUnit
        run: docker exec apiArtisanVillage bash -c "php artisan test tests/Feature"

      - name: Deploiement
        if: github.ref == 'refs/heads/main'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          # Configuration de la clé SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

          # Synchronisation des fichiers avec rsync
          rsync -avz --exclude 'node_modules' --exclude '.env' ./ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH

          # Connexion SSH et exécution des commandes de déploiement
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
            cd $REMOTE_PATH
            sudo ln -sf /etc/nginx/sites-available/apiartisanvillage.conf /etc/nginx/sites-enabled/
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            sudo systemctl restart nginx
            sudo certbot --nginx -d artisanvillage.fr -d www.artisanvillage.fr --non-interactive --agree-tos -m ludolpr@gmail.com
          EOF
