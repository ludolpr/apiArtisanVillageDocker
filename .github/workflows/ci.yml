name: CI/CD-Artisan-village

on:
  push:
    branches:
      - "main"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Install Composer on server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
            sudo apt-get update &&
            sudo apt-get install -y php-intl &&
            sudo apt-get install -y composer"

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy files to the server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_TEMP_PATH: ${{ secrets.REMOTE_TEMP_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "mkdir -p $REMOTE_TEMP_PATH"
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r * $REMOTE_USER@$REMOTE_HOST:$REMOTE_TEMP_PATH

      - name: Deploy code and adjust permissions
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
            sudo mkdir -p $REMOTE_PATH &&
            sudo mkdir -p $REMOTE_PATH/storage &&
            sudo mkdir -p $REMOTE_PATH/bootstrap/cache &&
            sudo rsync -avz --ignore-existing ~/apiartisanvillage/ $REMOTE_PATH &&
            sudo chown -R $REMOTE_USER:$REMOTE_USER $REMOTE_PATH &&
            sudo chmod -R 775 $REMOTE_PATH &&
            sudo chown -R www-data:www-data $REMOTE_PATH/storage $REMOTE_PATH/bootstrap/cache &&
            # Ensure directories are writable
            sudo chmod -R 775 $REMOTE_PATH/storage $REMOTE_PATH/bootstrap/cache"

  post-deploy:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Finalize deployment
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
            # Move the Nginx configuration file
            sudo cp $REMOTE_PATH/docker/apiartisanvillage /etc/nginx/sites-available/ &&
            sudo ln -sf /etc/nginx/sites-available/apiartisanvillage /etc/nginx/sites-enabled/ &&
            # Install Composer dependencies and run Laravel commands
            cd $REMOTE_PATH &&
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader &&
            php artisan migrate --force &&
            php artisan cache:clear &&
            php artisan config:cache &&
            php artisan route:cache &&
            # Restart Nginx
            sudo systemctl restart nginx &&
            # SSL configuration with Certbot
            sudo certbot --nginx -d artisanvillage.fr -d www.artisanvillage.fr --non-interactive --agree-tos -m ludolpr@gmail.com"
