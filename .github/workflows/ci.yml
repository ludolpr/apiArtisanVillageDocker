name: CI/CD-Artisan-village
# test 
on:
  push:
    branches:
      - "main"

jobs:
  docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker .env file
        run: |
          mkdir -p ./docker
          cat <<EOF > ./docker/.env
          DB_CONNECTION=mysql
          DB_HOST=mysql
          DB_PORT=3306
          DB_DATABASE=testing
          DB_USERNAME=root
          DB_PASSWORD=root
          EOF

      - name: Install Docker Compose
        uses: hoverkraft-tech/compose-action@v2.0.1

      - name: Wait for Docker services to initialize
        run: sleep 30s

      - name: Start Docker containers
        run: |
          for i in {1..5}; do docker-compose up -d && break || sleep 15; done

      - name: Verify .env file existence
        run: |
          [ -f ./docker/.env ] && echo "Fichier .env trouvé." || echo "Fichier .env manquant."

      - name: Copy Nginx configuration
        run: docker cp ./docker/apiartisanvillage.conf apiArtisanVillage:/etc/nginx/sites-available/apiartisanvillage.conf

      - name: Install Composer dependencies
        run: docker exec apiArtisanVillage bash -c "composer install"

      - name: Run database migrations
        run: docker exec apiArtisanVillage bash -c "php artisan migrate --force"

      - name: Seed database
        run: docker exec apiArtisanVillage bash -c "php artisan db:seed --force"

      - name: Run test database migrations
        run: docker exec apiArtisanVillage bash -c "php artisan migrate --env=testing --force"

      - name: Run PHPUnit tests
        run: docker exec apiArtisanVillage bash -c "php artisan test tests/Feature"

      - name: Deploiement
        if: github.ref == 'refs/heads/main'
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass
          # 1. Transférer les fichiers vers la racine du VPS
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r ./* $REMOTE_USER@$REMOTE_HOST:~/
          # 2. Déplacer les fichiers vers /var/www
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
            sudo mkdir -p /var/www/artisanvillage &&
            sudo mv ~/docker /var/www/artisanvillage &&
            # Ajustez les permissions
            sudo chown -R www-data:www-data /var/www/artisanvillage/storage &&
            sudo chmod -R 775 /var/www/artisanvillage/storage &&
            sudo chown -R $REMOTE_USER:$REMOTE_USER /var/www/artisanvillage &&
            ln -sf /etc/nginx/sites-available/apiartisanvillage.conf /etc/nginx/sites-enabled/ &&
            cd /var/www/artisanvillage &&
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader &&
            php artisan migrate --force &&
            php artisan cache:clear &&
            php artisan config:cache &&
            php artisan route:cache &&
            php artisan storage:link &&
            sudo systemctl restart nginx &&
            sudo certbot --nginx -d artisanvillage.fr -d www.artisanvillage.fr --non-interactive --agree-tos -m ludolpr@gmail.com"
